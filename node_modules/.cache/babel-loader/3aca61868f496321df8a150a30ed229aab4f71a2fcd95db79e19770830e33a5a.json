{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL||'https://jlddktlbyeiyeinzhfxx.supabase.co';const supabaseKey=process.env.REACT_APP_SUPABASE_ANON_KEY||'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpsZGRrdGxieWVpeWVpbnpoZnh4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzc0ODQsImV4cCI6MjA3Mzk1MzQ4NH0.ds0VnAuo1AOwVXP5kdErW09avurdlkIVtcKcAEJtkV8';export const supabase=createClient(supabaseUrl,supabaseKey);// Funciones de autenticación\nexport const auth={// Iniciar sesión\nasync signIn(email,password){try{const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error)throw error;return{success:true,user:data.user};}catch(error){console.error('Error al iniciar sesión:',error);return{success:false,error:error.message};}},// Registrar usuario\nasync signUp(email,password){let userData=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const{data,error}=await supabase.auth.signUp({email,password,options:{data:userData}});if(error)throw error;return{success:true,user:data.user};}catch(error){console.error('Error al registrar usuario:',error);return{success:false,error:error.message};}},// Cerrar sesión\nasync signOut(){try{const{error}=await supabase.auth.signOut();if(error)throw error;return{success:true};}catch(error){console.error('Error al cerrar sesión:',error);return{success:false,error:error.message};}},// Obtener usuario actual\nasync getCurrentUser(){try{const{data:{user},error}=await supabase.auth.getUser();if(error)throw error;return{success:true,user};}catch(error){console.error('Error al obtener usuario:',error);return{success:false,error:error.message};}},// Escuchar cambios de autenticación\nonAuthStateChange(callback){return supabase.auth.onAuthStateChange(callback);}};// Funciones para la base de datos\nexport const database={// Obtener categorías\nasync getCategories(){try{const{data,error}=await supabase.from('categories').select('*').order('name');if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener categorías:',error);return{success:false,error:error.message};}},// Obtener ingredientes\nasync getIngredients(){try{const{data,error}=await supabase.from('ingredients').select(`\n          *,\n          categories(name)\n        `).eq('active',true).order('name');if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener ingredientes:',error);return{success:false,error:error.message};}},// Crear ingrediente\nasync createIngredient(ingredientData){try{const{data,error}=await supabase.from('ingredients').insert([ingredientData]).select();if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al crear ingrediente:',error);return{success:false,error:error.message};}},// Actualizar ingrediente\nasync updateIngredient(id,ingredientData){try{const{data,error}=await supabase.from('ingredients').update(ingredientData).eq('id',id).select();if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al actualizar ingrediente:',error);return{success:false,error:error.message};}},// Eliminar ingrediente\nasync deleteIngredient(id){try{const{error}=await supabase.from('ingredients').update({active:false}).eq('id',id);if(error)throw error;return{success:true};}catch(error){console.error('Error al eliminar ingrediente:',error);return{success:false,error:error.message};}},// Obtener inventario\nasync getInventory(){try{const{data,error}=await supabase.from('inventory').select(`\n          *,\n          ingredients(name, unit_measure, min_stock_level),\n          inventory_families(name),\n          inventory_subfamilies(name)\n        `).order('created_at',{ascending:false});if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener inventario:',error);return{success:false,error:error.message};}},// Obtener proveedores\nasync getSuppliers(){try{const{data,error}=await supabase.from('suppliers').select('*').eq('active',true).order('name');if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener proveedores:',error);return{success:false,error:error.message};}},// Obtener órdenes de compra\nasync getPurchaseOrders(){try{const{data,error}=await supabase.from('purchase_orders').select(`\n          *,\n          suppliers(name, contact_person),\n          purchase_order_items(\n            *,\n            ingredients(name, unit_measure)\n          )\n        `).order('created_at',{ascending:false});if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener órdenes de compra:',error);return{success:false,error:error.message};}},// Obtener movimientos de inventario\nasync getInventoryMovements(){try{const{data,error}=await supabase.from('inventory_movements').select(`\n          *,\n          ingredients(name, unit_measure),\n          admin_usuarios(username)\n        `).order('created_at',{ascending:false});if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener movimientos:',error);return{success:false,error:error.message};}},// Crear proveedor\nasync createSupplier(supplierData){try{const{data,error}=await supabase.from('suppliers').insert([supplierData]).select();if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al crear proveedor:',error);return{success:false,error:error.message};}},// Actualizar proveedor\nasync updateSupplier(id,supplierData){try{const{data,error}=await supabase.from('suppliers').update(supplierData).eq('id',id).select();if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al actualizar proveedor:',error);return{success:false,error:error.message};}},// Eliminar proveedor\nasync deleteSupplier(id){try{const{error}=await supabase.from('suppliers').update({active:false}).eq('id',id);if(error)throw error;return{success:true};}catch(error){console.error('Error al eliminar proveedor:',error);return{success:false,error:error.message};}},// Obtener ingredientes de un proveedor\nasync getSupplierIngredients(supplierId){try{const{data,error}=await supabase.from('supplier_ingredients').select(`\n          *,\n          ingredients(name, unit_measure)\n        `).eq('supplier_id',supplierId).order('created_at',{ascending:false});if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener ingredientes del proveedor:',error);return{success:false,error:error.message};}},// Agregar ingrediente a proveedor\nasync addSupplierIngredient(supplierId,ingredientData){try{const{data,error}=await supabase.from('supplier_ingredients').insert([{...ingredientData,supplier_id:supplierId}]).select(`\n          *,\n          ingredients(name, unit_measure)\n        `);if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al agregar ingrediente al proveedor:',error);return{success:false,error:error.message};}},// Obtener licencia de usuario\nasync getUserLicense(email){try{const{data,error}=await supabase.from('admin_usuarios').select('*').eq('email',email).single();if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener licencia del usuario:',error);return{success:false,error:error.message};}},// Actualizar licencia de usuario\nasync updateUserLicense(email,licenseData){try{const{data,error}=await supabase.from('admin_usuarios').update(licenseData).eq('email',email).select();if(error)throw error;return{success:true,data:data[0]};}catch(error){console.error('Error al actualizar licencia del usuario:',error);return{success:false,error:error.message};}},// Obtener todos los usuarios (solo para administradores)\nasync getAllUsers(){try{const{data,error}=await supabase.from('admin_usuarios').select('id, username, email, license_type, license_expires_at, max_ingredients, max_suppliers, is_admin, last_update').order('last_update',{ascending:false});if(error)throw error;return{success:true,data};}catch(error){console.error('Error al obtener usuarios:',error);return{success:false,error:error.message};}}};export default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_ANON_KEY","supabase","auth","signIn","email","password","data","error","signInWithPassword","success","user","console","message","signUp","userData","arguments","length","undefined","options","signOut","getCurrentUser","getUser","onAuthStateChange","callback","database","getCategories","from","select","order","getIngredients","eq","createIngredient","ingredientData","insert","updateIngredient","id","update","deleteIngredient","active","getInventory","ascending","getSuppliers","getPurchaseOrders","getInventoryMovements","createSupplier","supplierData","updateSupplier","deleteSupplier","getSupplierIngredients","supplierId","addSupplierIngredient","supplier_id","getUserLicense","single","updateUserLicense","licenseData","getAllUsers"],"sources":["C:/xampp/htdocs/GestorOficial/src/config/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://jlddktlbyeiyeinzhfxx.supabase.co'\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpsZGRrdGxieWVpeWVpbnpoZnh4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgzNzc0ODQsImV4cCI6MjA3Mzk1MzQ4NH0.ds0VnAuo1AOwVXP5kdErW09avurdlkIVtcKcAEJtkV8'\n\nexport const supabase = createClient(supabaseUrl, supabaseKey)\n\n// Funciones de autenticación\nexport const auth = {\n  // Iniciar sesión\n  async signIn(email, password) {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      })\n      \n      if (error) throw error\n      return { success: true, user: data.user }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Registrar usuario\n  async signUp(email, password, userData = {}) {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: userData\n        }\n      })\n      \n      if (error) throw error\n      return { success: true, user: data.user }\n    } catch (error) {\n      console.error('Error al registrar usuario:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Cerrar sesión\n  async signOut() {\n    try {\n      const { error } = await supabase.auth.signOut()\n      if (error) throw error\n      return { success: true }\n    } catch (error) {\n      console.error('Error al cerrar sesión:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener usuario actual\n  async getCurrentUser() {\n    try {\n      const { data: { user }, error } = await supabase.auth.getUser()\n      if (error) throw error\n      return { success: true, user }\n    } catch (error) {\n      console.error('Error al obtener usuario:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Escuchar cambios de autenticación\n  onAuthStateChange(callback) {\n    return supabase.auth.onAuthStateChange(callback)\n  }\n}\n\n// Funciones para la base de datos\nexport const database = {\n  // Obtener categorías\n  async getCategories() {\n    try {\n      const { data, error } = await supabase\n        .from('categories')\n        .select('*')\n        .order('name')\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener categorías:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener ingredientes\n  async getIngredients() {\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .select(`\n          *,\n          categories(name)\n        `)\n        .eq('active', true)\n        .order('name')\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener ingredientes:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Crear ingrediente\n  async createIngredient(ingredientData) {\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .insert([ingredientData])\n        .select()\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al crear ingrediente:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Actualizar ingrediente\n  async updateIngredient(id, ingredientData) {\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .update(ingredientData)\n        .eq('id', id)\n        .select()\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al actualizar ingrediente:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Eliminar ingrediente\n  async deleteIngredient(id) {\n    try {\n      const { error } = await supabase\n        .from('ingredients')\n        .update({ active: false })\n        .eq('id', id)\n      \n      if (error) throw error\n      return { success: true }\n    } catch (error) {\n      console.error('Error al eliminar ingrediente:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener inventario\n  async getInventory() {\n    try {\n      const { data, error } = await supabase\n        .from('inventory')\n        .select(`\n          *,\n          ingredients(name, unit_measure, min_stock_level),\n          inventory_families(name),\n          inventory_subfamilies(name)\n        `)\n        .order('created_at', { ascending: false })\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener inventario:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener proveedores\n  async getSuppliers() {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .select('*')\n        .eq('active', true)\n        .order('name')\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener proveedores:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener órdenes de compra\n  async getPurchaseOrders() {\n    try {\n      const { data, error } = await supabase\n        .from('purchase_orders')\n        .select(`\n          *,\n          suppliers(name, contact_person),\n          purchase_order_items(\n            *,\n            ingredients(name, unit_measure)\n          )\n        `)\n        .order('created_at', { ascending: false })\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener órdenes de compra:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener movimientos de inventario\n  async getInventoryMovements() {\n    try {\n      const { data, error } = await supabase\n        .from('inventory_movements')\n        .select(`\n          *,\n          ingredients(name, unit_measure),\n          admin_usuarios(username)\n        `)\n        .order('created_at', { ascending: false })\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener movimientos:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Crear proveedor\n  async createSupplier(supplierData) {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .insert([supplierData])\n        .select()\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al crear proveedor:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Actualizar proveedor\n  async updateSupplier(id, supplierData) {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .update(supplierData)\n        .eq('id', id)\n        .select()\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al actualizar proveedor:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Eliminar proveedor\n  async deleteSupplier(id) {\n    try {\n      const { error } = await supabase\n        .from('suppliers')\n        .update({ active: false })\n        .eq('id', id)\n      \n      if (error) throw error\n      return { success: true }\n    } catch (error) {\n      console.error('Error al eliminar proveedor:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener ingredientes de un proveedor\n  async getSupplierIngredients(supplierId) {\n    try {\n      const { data, error } = await supabase\n        .from('supplier_ingredients')\n        .select(`\n          *,\n          ingredients(name, unit_measure)\n        `)\n        .eq('supplier_id', supplierId)\n        .order('created_at', { ascending: false })\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener ingredientes del proveedor:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Agregar ingrediente a proveedor\n  async addSupplierIngredient(supplierId, ingredientData) {\n    try {\n      const { data, error } = await supabase\n        .from('supplier_ingredients')\n        .insert([{\n          ...ingredientData,\n          supplier_id: supplierId\n        }])\n        .select(`\n          *,\n          ingredients(name, unit_measure)\n        `)\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al agregar ingrediente al proveedor:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener licencia de usuario\n  async getUserLicense(email) {\n    try {\n      const { data, error } = await supabase\n        .from('admin_usuarios')\n        .select('*')\n        .eq('email', email)\n        .single()\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener licencia del usuario:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Actualizar licencia de usuario\n  async updateUserLicense(email, licenseData) {\n    try {\n      const { data, error } = await supabase\n        .from('admin_usuarios')\n        .update(licenseData)\n        .eq('email', email)\n        .select()\n      \n      if (error) throw error\n      return { success: true, data: data[0] }\n    } catch (error) {\n      console.error('Error al actualizar licencia del usuario:', error)\n      return { success: false, error: error.message }\n    }\n  },\n\n  // Obtener todos los usuarios (solo para administradores)\n  async getAllUsers() {\n    try {\n      const { data, error } = await supabase\n        .from('admin_usuarios')\n        .select('id, username, email, license_type, license_expires_at, max_ingredients, max_suppliers, is_admin, last_update')\n        .order('last_update', { ascending: false })\n      \n      if (error) throw error\n      return { success: true, data }\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error)\n      return { success: false, error: error.message }\n    }\n  }\n}\n\nexport default supabase\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}